doctype html
html
    include ../mixins/player.pug
    block head
        meta(name='viewport' content='width=device-width, initial-scale=1.0, user-scalable=no')
        link(rel='stylesheet' type='text/css' href='/stylesheets/bootstrap-3.3.7.min.css')
        link(rel='stylesheet' type='text/css' href='/stylesheets/style.css')

        link(rel='stylesheet' type='text/css' href='/fonts/open-sans.css')

        script(src='/javascripts/jquery-3.1.1.min.js')
        script(src='/javascripts/bootstrap-3.3.7.min.js')
        script(src='/javascripts/frontend-helpers.js')

        link(rel="stylesheet" href="https://use.fontawesome.com/releases/v5.1.0/css/all.css" integrity="sha384-lKuwvrZot6UHsBSfcMvOkWwlCMgc0TaWr+30HWe3a4ltaBwTZhyTEggF5tJv8tbt" crossorigin="anonymous")
        title kcapp
        script(src='/javascripts/views/entry_layout.js')
        script(src='/javascripts/socket.io-2.0.3.min.js')
    block scripts
        script
            include socketio_helper.js
        script.
            var leg = !{JSON.stringify(leg)}
            var playersMap = !{JSON.stringify(players)}
            $(function () {
                var activeSocket = io(window.location.origin + '/active');
                activeSocket.on('warmup_started', (data) => {
                    location.href = '/matches/' + data.match.id + '/obs';
                });

                socket = getLegsNamespace(leg);
                if (leg.is_finished) {
                    return;
                }
                socket.on('possible_throw', function (data) {
                    leg.is_finished = data.is_finished;
                    if (data.is_finished) {
                        // Update legs won for player
                        var legsWon = $('#obs-player-legs-' + data.current_player_id);
                        legsWon.text(parseInt(legsWon.text()) + 1);
                        return;
                    }
                    var scorecard = '#obs-scorecard-player-' + data.current_player_id;
                    var dart;
                    if (data.darts_thrown === 1) {
                        dart = $(scorecard + ' .obs-dart-score.first');
                    }
                    else if (data.darts_thrown === 2) {
                        dart = $(scorecard + ' .obs-dart-score.second');
                    }
                    else if (data.darts_thrown === 3) {
                        dart = $(scorecard + ' .obs-dart-score.third');
                    }
                    else {
                        console.log("Unknown darts_thrown: " + data.darts_thrown);
                        return;
                    }
                    dart.text(data.dart_text.replace('-', ''));

                    // Subtract from current player score
                    var score = $('#obs-player-score-' + data.current_player_id);
                    score.text(parseInt(score.text() - data.score));

                    // Update total
                    var total = $(scorecard + ' .obs-total-score');
                    total.text(parseInt(total.text() + data.score));
                });

                socket.on('undo_visit', function (data) {
                    // TODO
                });

                socket.on('score_update', function (data) {
                    var players = data.players;
                    var currentPlayerId = data.leg.current_player_id;
                    for (key in players) {
                        var player = players[key];
                        // Update score for each player
                        $('#obs-player-score-' + player.player_id).text(player.current_score)

                        var scorecard = $('#obs-scorecard-player-' + player.player_id);
                        scorecard.removeClass();
                        if (player.player_id === currentPlayerId) {
                            scorecard.addClass('obs-visits-active');

                            var clazz = '#obs-scorecard-player-' + currentPlayerId;
                            $(clazz + ' .obs-dart-score.first').text('');
                            $(clazz + ' .obs-dart-score.second').text('');
                            $(clazz + ' .obs-dart-score.third').text('');
                            $('#active-player-' + player.player_id).css("opacity", "1.0");
                        } else {
                            scorecard.addClass('obs-visits-inactive');
                            $('#active-player-' + player.player_id).css("opacity", "0.0");
                        }
                    }
                });
                socket.on('leg_finished', function (data) {
                    location.reload();
                });
            });

    block body
        body
            div(id='obs')
                table(style='width: 600px; font-size: 20px; background-color: #2877ca;')
                    each player in leg_players
                        - var playerId = player.player_id;
                        - var activeClass = player.is_current_player ? 'obs-visits-active' : 'obs-visits-inactive'
                        tr(class=activeClass id='obs-scorecard-player-' + playerId style='height: 30px; line-height: 30px;')
                            // Do not remove
                            td(style='display: none;' class='obs-total-score')= 0
                            td(style='width: 30px; text-align: center; color: white;')
                                i(id='active-player-' + playerId class="fas fa-caret-right" style="opacity: " + (player.is_current_player ? "1.0" : "0.0"))
                            td(class='obs-table-player-name')= players[playerId].name
                            td(class='obs-dart-score first' data-multiplier='1') &nbsp;
                            td(class='obs-dart-score second' data-multiplier='1') &nbsp;
                            td(class='obs-dart-score third' data-multiplier='1') &nbsp;
                            td(class='obs-player-score' id='obs-player-score-' + playerId)= player.current_score
                            td(id='obs-player-legs-' + player.player_id class='obs-player-legs')= (player.wins ? player.wins : '0')
